using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using MySql.Data.MySqlClient;
using MySQLCore.Models;
using System;
using ToDo.Models;

namespace ToDo.Controllers
{
    public class CategoriesController : Controller
    {

      [HttpGet("/Categories/Index")]
      public ActionResult Index()
      {
        List<Category> secondItems = new List<Category>{};
        return View(secondItems);
      }

        [HttpGet("/categories")]
        public ActionResult CategoriesIndex()
        {
            List<Category> allCategories = Category.GetAll();
            if (alLCategories.Count < = 0)
            {
              List<Category> allCategories = new List<Category>{};
            }
            return View("Index", allCategories);
        }


        // [HttpGet("/categories/new")]
        // public ActionResult CreateForm()
        // {
        //     return View();
        // }
        // [HttpPost("/categories/new")]
        // public ActionResult Create()
        // {
        //     Category newItem = new Category(Request.Form["category-description"]);
        //     newItem.Save();
        //     // return RedirectToAction("Success", "Home");
        //     return View("Success");
        //
        // }

        // [HttpGet("/categories/new")]
        // public ActionResult CreateCatForm()
        // {
        //   // Console.WriteLine("Got to Categories New");
        //   // List<Category> allCategories = new List<Category>{};
        //   // return View("Index", allCategories); // was plain view
        //   return View("CreateForm");
        // }
        // [HttpPost("/categories")]
        // public ActionResult CreateCat()
        // {
        //     Category newCategory = new Category(Request.Form["category-name"]);
        //     newCategory.Save();
        //     return RedirectToAction("Success", "Home");
        //     // View("Index");
        // }

        [HttpGet("/categories/{id}")]
        public ActionResult CategoryDetail(int id)
        {
            Dictionary<string, object> model = new Dictionary<string, object>();
            Category selectedCategory = Category.Find(id);
            List<Item> categoryItems = SelectedCategory.GetItems();
            List<Item> allItems = Item.GetAll();
            model.Add("category", selectedCategory);
            model.Add("categoryItems", categoryItems);
            model.Add("allItems", allItems);
            return View(model);
        }

        // //ADD TASK TO CATEGORY
        // [HttpPost("/categories/{categoryId}/items/new")]
        // public ActionResult AddItem(int categoryId)
        // {
        //     Console.WriteLine("In Cat's Add Item.");
        //     Category category = Category.Find(categoryId);
        //     Item item = Item.Find(Int32.Parse(Request.Form["item-id"]));
        //     category.AddItem(item);
        //     return RedirectToAction("Success", "Home");
        // }

    }
}
